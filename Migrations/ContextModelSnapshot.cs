// <auto-generated />
using System;
using API_APENKOOI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API_APENKOOI.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API_APENKOOI.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IngredientDecsription");

                    b.HasKey("Id");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("API_APENKOOI.Models.IngredientQuantity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount");

                    b.Property<int>("IngredientId");

                    b.Property<int>("QuantityTypeId");

                    b.Property<int>("RecipeId");

                    b.HasKey("id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("QuantityTypeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientQuantity");
                });

            modelBuilder.Entity("API_APENKOOI.Models.QuantityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuantityTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("QuantityType");
                });

            modelBuilder.Entity("API_APENKOOI.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HowManyPersons");

                    b.Property<string>("PreparationMethods");

                    b.Property<string>("RecipeDescription");

                    b.Property<int>("RecipeTypeId");

                    b.Property<int?>("TimeCreated");

                    b.HasKey("Id");

                    b.HasIndex("RecipeTypeId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("API_APENKOOI.Models.RecipeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecipeTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("RecipeType");
                });

            modelBuilder.Entity("API_APENKOOI.Models.Table.APIUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("APIUsers");
                });

            modelBuilder.Entity("API_APENKOOI.Models.IngredientQuantity", b =>
                {
                    b.HasOne("API_APENKOOI.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("API_APENKOOI.Models.QuantityType", "QuantityType")
                        .WithMany()
                        .HasForeignKey("QuantityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("API_APENKOOI.Models.Recipe")
                        .WithMany("IngredientQuantities")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("API_APENKOOI.Models.Recipe", b =>
                {
                    b.HasOne("API_APENKOOI.Models.RecipeType", "RecipeType")
                        .WithMany()
                        .HasForeignKey("RecipeTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
